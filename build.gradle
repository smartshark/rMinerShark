allprojects {
	repositories {
	  	jcenter()
	  	mavenLocal()
	  	flatDir {
	  	       dirs 'libs'
	    }
	  }

	//Plugins applyen
	apply plugin:'java'
	apply plugin:'eclipse'
	//Decoding
	compileJava.options.encoding = 'UTF-8'

	tasks.withType(JavaCompile) {
	    options.encoding = 'UTF-8'
	}
}

apply plugin: 'application'
mainClassName = 'de.ugoe.cs.smartshark.rMineSHARK.rMineShark'

dependencies {
    // The production code uses the SLF4J logging API at compile time
	compile 'org.slf4j:slf4j-log4j12:1.7.7'
    compile "commons-cli:commons-cli:1.4"
    compile "ch.qos.logback:logback-classic:1.2.3"

    // Smartshark Data-Models
    compile 'io.github.smartshark:jSHARK:2.0.3'
    compile 'org.mongodb.morphia:morphia:1.3.2'

    // RefactoringMiner
    compile name: "RefactoringMiner-1.0"
  	compile 'org.eclipse.jgit:org.eclipse.jgit:5.2.1.201812262042-r'
	compile 'org.eclipse.jdt:org.eclipse.jdt.core:3.16.0'
	compile 'org.apache.commons:commons-text:1.6'
	compile 'org.kohsuke:github-api:1.95'

	// own
	compile "org.apache.commons:commons-csv:1.5"

	compile 'org.rauschig:jarchivelib:0.7.1'

    // Test
    testCompile 'junit:junit:4.12'
}

//Projektversion wird Ã¼ber die gradle.properties gesetzt
if (project.hasProperty('projectVersion')) {
  project.version = project.projectVersion
} else {
  project.version = findProperty('projectVersion');
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'SmartSHARK rMineShark',
        	'Implementation-Version': 1,
        	'Main-Class': 'de.ugoe.cs.smartshark.rMineSHARK.rMineShark'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
